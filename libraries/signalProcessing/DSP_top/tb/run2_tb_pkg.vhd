--
-- Package generated by Perentie Matlab packetised model. 
-- Procedures to configure AXI-lite peripherals according to the run2 test case.
-- Creation Date 12-Apr-2019 16:18:34 
library IEEE, axi4_lib, LFAADecode_lib, localDoppler_lib;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use axi4_lib.axi4_lite_pkg.all;
use LFAADecode_lib.LFAADecode_lfaadecode_reg_pkg.ALL;

package run2_tb_pkg is 
    procedure setupLFAADecode(signal mm_clk : in std_logic;
                              signal axi_miso : in t_axi4_lite_miso;
                              signal axi_mosi : out t_axi4_lite_mosi);

--    procedure setupLocalDopplerUpdate1(signal mm_clk : in std_logic;
--                              signal axi_miso : in t_axi4_lite_miso;
--                              signal axi_mosi : out t_axi4_lite_mosi);

--    procedure setupLocalDopplerUpdate2(signal mm_clk : in std_logic;
--                              signal axi_miso : in t_axi4_lite_miso;
--                              signal axi_mosi : out t_axi4_lite_mosi);

end run2_tb_pkg;

package body run2_tb_pkg is 

    procedure setupLFAADecode(signal mm_clk : in std_logic;
                              signal axi_miso : in t_axi4_lite_miso;
                              signal axi_mosi : out t_axi4_lite_mosi) is
    begin 
        axi_lite_blockwrite(mm_clk, axi_miso, axi_mosi, c_statctrl_vctable_address.base_address + c_statctrl_vctable_address.address, "LFAADecode_VCTable.txt");
        axi_lite_transaction(mm_clk, axi_miso, axi_mosi, c_statctrl_stationid1_address.base_address + c_statctrl_stationid1_address.address, true, x"00000001");
        axi_lite_transaction(mm_clk, axi_miso, axi_mosi, c_statctrl_stationid2_address.base_address + c_statctrl_stationid2_address.address, true, x"00000002");

    end procedure;

--    procedure setupLocalDopplerUpdate1(signal mm_clk : in std_logic;
--                      signal axi_miso : in t_axi4_lite_miso;
--                      signal axi_mosi : out t_axi4_lite_mosi) is
--    begin 
--        axi_lite_blockwrite(mm_clk, axi_miso, axi_mosi, c_LDCountOffset_address.base_address + c_LDCountOffset_address.address, "LDCountOffset1.txt");
--        axi_lite_blockwrite(mm_clk, axi_miso, axi_mosi, c_LDStartPhase_address.base_address + c_LDStartPhase_address.address, "LDStartPhase1.txt");
--        axi_lite_blockwrite(mm_clk, axi_miso, axi_mosi, c_LDPhaseStep_address.base_address + c_LDPhaseStep_address.address, "LDPhaseStep1.txt");
--    end procedure;
    
--    procedure setupLocalDopplerUpdate2(signal mm_clk : in std_logic;
--                      signal axi_miso : in t_axi4_lite_miso;
--                      signal axi_mosi : out t_axi4_lite_mosi) is
--    begin 
--        axi_lite_blockwrite(mm_clk, axi_miso, axi_mosi, c_LDCountOffset_address.base_address + c_LDCountOffset_address.address + 768*4, "LDCountOffset2.txt");
--        axi_lite_blockwrite(mm_clk, axi_miso, axi_mosi, c_LDStartPhase_address.base_address + c_LDStartPhase_address.address + 1536*4, "LDStartPhase2.txt");
--        axi_lite_blockwrite(mm_clk, axi_miso, axi_mosi, c_LDPhaseStep_address.base_address + c_LDPhaseStep_address.address + 1536*4, "LDPhaseStep2.txt");
--    end procedure;
    
end run2_tb_pkg;
