#!/bin/bash
# -------------------------------------------------------------------------- #
#
# Copyright (C) 2016
# ASTRON (Netherlands Institute for Radio Astronomy) <http://www.astron.nl/>
# JIVE (Joint Institute for VLBI in Europe) <http://www.jive.nl/>
# P.O.Box 2, 7990 AA Dwingeloo, The Netherlands
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# -------------------------------------------------------------------------- #
#

# Run this tool with at least the commandline arguments:
#   run_vcomp toolset tool version design_name
# example:
#   run_vcomp lru vivado 2017.4 gemini_lru_test

if [ ! "$1" ]; then
    echo "run_vcomp error: missing argument for toolset"
    exit 1
fi

if [ ! "$2" ]; then
    echo "run_vcomp error: missing argument for tool"
    exit 1
fi

if [ ! "$3" ]; then
    echo "run_vcomp error: missing argument for version"
    exit 1
fi

toolset=$1
tool=$2
version=$3

# treat unset variables as an error - better fail loudly.
# implication is that "$1" and "$2" etc cannot be used in tests
#   as they may be quite unset, eg when the user did not enter
#   them on the commandline.
#   now you get to parse the commandline and explicitly extract
#   the info you want or fill in with defaults
# bonus: extragratis failure if, for some reason, the ${UNB}
#   directory is not set.
#set -u


# read generic functions/definitions
. ${RADIOHDL}/tools/generic.sh



# Only vivado recognised
if [ "${tool}" != "vivado" ]; then
   tool_error $0 "Unknown toolset - ${tool}"
fi

# All to override version selection by hard setting these variable in the system config
if [ ! -v XILINX_VIVADO ]; then
   # Add Xilinx bin diretcory to path
   pathadd ${VIVADO_PATH}/${version}/bin
   pathadd ${VIVADO_SDK_PATH}/${version}/bin

   export XILINX_VIVADO=${VIVADO_PATH}/${version}
fi

# User synthesis timestamp in FPGA image
export RADIOHDL_GIT_REVISION=`git rev-parse HEAD`

OUTPUT_DIR="${HDL_BUILD_DIR}/${toolset}/${tool}/"

if  [ ! "$4" ]; then
  vivado
else
  if [ ! -d ${OUTPUT_DIR} ]; then
      mkdir ${OUTPUT_DIR}
  fi

  cd ${OUTPUT_DIR}
  tool_info $0 "Performing build of project ${4}"
  vivado -mode tcl -source $4
fi
